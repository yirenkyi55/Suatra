//Centers an element vertically and horizontally
@mixin position_center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin clearfix {
  &::after {
    content: "";
    clear: both;
    display: table;
  }
}

@mixin scrollBar {
  &::-webkit-scrollbar {
    width: 0.7rem;
    height: 1px;
    background: var(--color-primary-white);
  }

  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 0.1rem rgba(0, 0, 0, 0.1);
    border-radius: 10px;
  }

  &::-webkit-scrollbar-thumb {
    outline: 1px solid var(--color-primary-3);
    border-radius: 10px;
    background-color: var(--color-primary-2);
    background-image: -webkit-linear-gradient(
      90deg,
      transparent,
      rgba(0, 0, 0, 0.4) 50%,
      transparent,
      transparent
    );
  }
}
//Used to provide responsive breakpoint functionality for the application
@mixin respond($breakpoint) {
  @if ($breakpoint==min-phone) {
    //328 20.5em
    @media only screen and (max-width: 20.5em) {
      @content;
    }
  }

  @if ($breakpoint==phone) {
    @media only screen and (max-width: 37.5em) {
      //600px
      @content;
    }
  }

  @if ($breakpoint==large-phone) {
    @media only screen and (max-width: 46.56em) {
      //745px
      @content;
    }
  }

  @if $breakpoint==tab-port {
    @media only screen and (max-width: 56.25em) {
      //900px
      @content;
    }
  }

  @if $breakpoint == tab-port-land {
    @media only screen and (max-width: 68.3125em) {
      @content;
    }
  }

  @if $breakpoint==tab-land {
    @media only screen and (max-width: 75em) {
      //1200px
      @content;
    }
  }

  @if $breakpoint==big-desktop {
    @media only screen and (min-width: 112.5em) {
      //1800px
      @content;
    }
  }
}
